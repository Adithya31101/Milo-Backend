import{p as d,i as p}from"./vendor.2994a4a3.js";const f=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))t(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&t(o)}).observe(document,{childList:!0,subtree:!0});function a(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerpolicy&&(r.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?r.credentials="include":s.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(s){if(s.ep)return;s.ep=!0;const r=a(s);fetch(s.href,r)}};f();const y="http://localhost:5000",h=(n,e)=>{n.create({key:"left-walk",frames:n.generateFrameNames(e,{prefix:"left-walk.",start:0,end:2,zeroPad:3}),frameRate:10,repeat:-1}),n.create({key:"right-walk",frames:n.generateFrameNames(e,{prefix:"right-walk.",start:0,end:2,zeroPad:3}),frameRate:10,repeat:-1}),n.create({key:"front-walk",frames:n.generateFrameNames(e,{prefix:"front-walk.",start:0,end:2,zeroPad:3}),frameRate:10,repeat:-1}),n.create({key:"back-walk",frames:n.generateFrameNames(e,{prefix:"back-walk.",start:0,end:2,zeroPad:3}),frameRate:10,repeat:-1})};class u extends d.exports.Scene{constructor(){super({key:"Home"})}preload(){this.avatarName=c.avatar,this.needsToUpdate=[],this.load.image("tiles",`${y}/maps/tilesets/tuxmon-sample-32px-extruded.png`),this.load.tilemapTiledJSON("map",`${y}/maps/json/tuxemon-town.json`)}create(){const e=this.make.tilemap({key:"map"}),a=e.addTilesetImage("tuxmon-sample-32px-extruded","tiles");e.createLayer("Below Player",a,0,0);const t=e.createLayer("World",a,0,0),s=e.createLayer("Above Player",a,0,0);t.setCollisionByProperty({collides:!0}),s.setDepth(10);const r=e.findObject("Objects",i=>i.name==="Spawn Point");this.player=this.physics.add.sprite(r.x,r.y,this.avatarName,"front-walk.000").setBodySize(32,20,!0).setSize(20,30).setOffset(0,0),this.physics.add.collider(this.player,t),h(this.player.anims,this.avatarName),l.emit("init",{socId:l.id,name:c.name,avatar:c.avatar,x:this.player.x,y:this.player.y},i=>{this.currentPlayers=i,this.addPlayersToScene()}),l.on("new-player",i=>{this.currentPlayers[i.socId]=i,this.otherSprites[i.socId]=this.addPlayer(i),console.log(this.otherSprites)}),l.on("move-player",i=>{this.needsToUpdate[i.socId]=i.key}),l.on("stop-player",i=>{this.needsToUpdate[i.socId]=null,this.otherSprites[i.socId].setPosition(i.x,i.y)}),l.on("remove-player",i=>{delete this.currentPlayers[i]});const o=this.cameras.main;o.startFollow(this.player),o.setBounds(0,0,e.widthInPixels,e.heightInPixels),this.cursors=this.input.keyboard.createCursorKeys(),this.keyDownSent="ready"}update(e,a){const t=175,s=this.player.body.velocity.clone();this.keyDownSent==="ready"&&(this.cursors.down.isDown||this.cursors.up.isDown||this.cursors.left.isDown||this.cursors.right.isDown)&&(l.emit("player-key-down",{socId:l.id,key:this.getKeyPress(this.cursors)}),this.keyDownSent="sent"),this.keyDownSent==="sent"&&this.cursors.down.isUp&&this.cursors.up.isUp&&this.cursors.left.isUp&&this.cursors.right.isUp&&(l.emit("player-key-up",{socId:l.id,x:this.player.x,y:this.player.y}),this.keyDownSent="ready"),this.player.body.setVelocity(0),this.cursors.left.isDown?this.player.body.setVelocityX(-t):this.cursors.right.isDown&&this.player.body.setVelocityX(t),this.cursors.up.isDown?this.player.body.setVelocityY(-t):this.cursors.down.isDown&&this.player.body.setVelocityY(t),this.player.body.velocity.normalize().scale(t),this.cursors.left.isDown?this.player.anims.play("left-walk",!0):this.cursors.right.isDown?this.player.anims.play("right-walk",!0):this.cursors.up.isDown?this.player.anims.play("back-walk",!0):this.cursors.down.isDown?this.player.anims.play("front-walk",!0):(this.player.anims.stop(),s.x<0?this.player.setTexture(this.avatarName,"left-walk.000"):s.x>0?this.player.setTexture(this.avatarName,"right-walk.000"):s.y<0?this.player.setTexture(this.avatarName,"back-walk.000"):s.y>0&&this.player.setTexture(this.avatarName,"front-walk.000")),this.moveOtherPlayers(t)}addPlayersToScene(){this.otherSprites=[],Object.keys(this.currentPlayers).forEach(e=>{e!==l.id&&(this.otherSprites[e]=this.addPlayer(this.currentPlayers[e]))})}addPlayer(e){const a=this.physics.add.sprite(e.x,e.y,e.avatar,"left-walk.000");return a.socId=e.socId,h(a.anims,e.avatar),a}getKeyPress(e){if(e.up.isDown)return 1;if(e.right.isDown)return 2;if(e.down.isDown)return 3;if(e.left.isDown)return 4}moveOtherPlayers(e){Object.keys(this.needsToUpdate).forEach(a=>{const t=this.otherSprites[a],s=this.currentPlayers[a].avatar,r=t.body.velocity.clone(),o=this.needsToUpdate[a];t.body.setVelocity(0),o?(o===4?(t.body.setVelocityX(-e),t.anims.play("left-walk",!0)):o===2?(t.body.setVelocityX(e),t.anims.play("right-walk",!0)):o===1?(t.body.setVelocityY(-e),t.anims.play("back-walk",!0)):o===3&&(t.body.setVelocityY(e),t.anims.play("front-walk",!0)),t.body.velocity.normalize().scale(e)):(t.anims.stop(),r.x<0?t.setTexture(s,"left-walk.000"):r.x>0?t.setTexture(s,"right-walk.000"):r.y<0?t.setTexture(s,"back-walk.000"):r.y>0&&t.setTexture(s,"front-walk.000"),delete this.needsToUpdate[a])})}}let c={};const l=p("http://localhost:5000/");l.on("connect",()=>{console.log("Connected to the server...")});const m={type:Phaser.AUTO,width:700,height:700,parent:"canvas",pixelArt:!0,physics:{default:"arcade",arcade:{gravity:{y:0}}},scene:u};new Phaser.Game(m);
