import{p,i as f}from"./vendor.2994a4a3.js";const m=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))t(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&t(o)}).observe(document,{childList:!0,subtree:!0});function i(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerpolicy&&(r.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?r.credentials="include":s.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function t(s){if(s.ep)return;s.ep=!0;const r=i(s);fetch(s.href,r)}};m();const c="http://localhost:5000",h=(l,e)=>{l.create({key:"left-walk",frames:l.generateFrameNames(e,{prefix:"left-walk.",start:0,end:2,zeroPad:3}),frameRate:10,repeat:-1}),l.create({key:"right-walk",frames:l.generateFrameNames(e,{prefix:"right-walk.",start:0,end:2,zeroPad:3}),frameRate:10,repeat:-1}),l.create({key:"front-walk",frames:l.generateFrameNames(e,{prefix:"front-walk.",start:0,end:2,zeroPad:3}),frameRate:10,repeat:-1}),l.create({key:"back-walk",frames:l.generateFrameNames(e,{prefix:"back-walk.",start:0,end:2,zeroPad:3}),frameRate:10,repeat:-1})};class w extends p.exports.Scene{constructor(){super({key:"Home"})}preload(){console.log(y),d({name:"Adithya"}),console.log(y),this.load.image("tiles",`${c}/maps/tilesets/tuxmon-sample-32px-extruded.png`),this.load.tilemapTiledJSON("map",`${c}/maps/json/tuxemon-town.json`),this.load.atlas("self",`${c}/characters/sprites/cap_blue_boy.png`,`${c}/characters/json/spritesheet.json`)}create(){const e=this.make.tilemap({key:"map"}),i=e.addTilesetImage("tuxmon-sample-32px-extruded","tiles");e.createLayer("Below Player",i,0,0);const t=e.createLayer("World",i,0,0),s=e.createLayer("Above Player",i,0,0);t.setCollisionByProperty({collides:!0}),s.setDepth(10);const r=e.findObject("Objects",a=>a.name==="Spawn Point");this.player=this.physics.add.sprite(r.x,r.y,"self","front-walk.000").setBodySize(32,20,!0).setSize(20,30).setOffset(0,0),this.physics.add.collider(this.player,t),h(this.anims);const o=this.cameras.main;o.startFollow(this.player),o.setBounds(0,0,e.widthInPixels,e.heightInPixels),this.cursors=this.input.keyboard.createCursorKeys()}update(e,i){const t=175,s=this.player.body.velocity.clone();this.player.body.setVelocity(0),this.cursors.left.isDown?this.player.body.setVelocityX(-t):this.cursors.right.isDown&&this.player.body.setVelocityX(t),this.cursors.up.isDown?this.player.body.setVelocityY(-t):this.cursors.down.isDown&&this.player.body.setVelocityY(t),this.player.body.velocity.normalize().scale(t),this.cursors.left.isDown?this.player.anims.play("left-walk",!0):this.cursors.right.isDown?this.player.anims.play("right-walk",!0):this.cursors.up.isDown?this.player.anims.play("back-walk",!0):this.cursors.down.isDown?this.player.anims.play("front-walk",!0):(this.player.anims.stop(),s.x<0?this.player.setTexture("self","left-walk.000"):s.x>0?this.player.setTexture("self","right-walk.000"):s.y<0?this.player.setTexture("self","back-walk.000"):s.y>0&&this.player.setTexture("self","front-walk.000"))}}class k extends p.exports.Scene{constructor(){super({key:"Init1"})}preload(){this.avatarName=y.avatar,this.needsToUpdate=[],this.load.image("tiles",`${c}/maps/tilesets/BeachTileset.png`),this.load.tilemapTiledJSON("beach",`${c}/maps/json/beach.json`)}create(){const e=this.make.tilemap({key:"beach",tileWidth:32,tileHeight:32}),i=e.addTilesetImage("beach","tiles");e.createLayer("ground",i,0,0);const t=e.createLayer("interactiveLayer",i,0,0),s=e.createLayer("water",i,0,0);t.setCollisionByProperty({collides:!0}),s.setCollisionByProperty({collides:!0});const r=e.findObject("Objects",a=>a.name==="Spawn Point");this.player=this.physics.add.sprite(r.x,r.y,this.avatarName,"front-walk.000").setBodySize(32,20,!0).setSize(20,30).setOffset(0,0),this.physics.add.collider(this.player,s),console.log("MY SOCKET ID: ",n.id),n.emit("init",{socId:n.id,name:y.name,avatar:y.avatar,x:this.player.x,y:this.player.y},a=>{this.currentPlayers=a,this.addPlayersToScene()}),n.on("new-player",a=>{this.currentPlayers[a.socId]=a,this.otherSprites[a.socId]=this.addPlayer(a),console.log(this.otherSprites)}),n.on("move-player",a=>{this.needsToUpdate[a.socId]=a.key}),n.on("stop-player",a=>{this.needsToUpdate[a.socId]=null,this.otherSprites[a.socId].setPosition(a.x,a.y)}),n.on("remove-player",a=>{delete this.currentPlayers[a]}),h(this.player.anims,this.avatarName);const o=this.cameras.main;o.startFollow(this.player),o.setBounds(0,0,e.widthInPixels,e.heightInPixels),this.cursors=this.input.keyboard.createCursorKeys(),this.keyDownSent="ready"}update(e,i){const t=175,s=this.player.body.velocity.clone();this.keyDownSent==="ready"&&(this.cursors.down.isDown||this.cursors.up.isDown||this.cursors.left.isDown||this.cursors.right.isDown)&&(n.emit("player-key-down",{socId:n.id,key:this.getKeyPress(this.cursors)}),this.keyDownSent="sent"),this.keyDownSent==="sent"&&this.cursors.down.isUp&&this.cursors.up.isUp&&this.cursors.left.isUp&&this.cursors.right.isUp&&(n.emit("player-key-up",{socId:n.id,x:this.player.x,y:this.player.y}),this.keyDownSent="ready"),this.player.body.setVelocity(0),this.cursors.left.isDown?this.player.body.setVelocityX(-t):this.cursors.right.isDown&&this.player.body.setVelocityX(t),this.cursors.up.isDown?this.player.body.setVelocityY(-t):this.cursors.down.isDown&&this.player.body.setVelocityY(t),this.player.body.velocity.normalize().scale(t),this.cursors.left.isDown?this.player.anims.play("left-walk",!0):this.cursors.right.isDown?this.player.anims.play("right-walk",!0):this.cursors.up.isDown?this.player.anims.play("back-walk",!0):this.cursors.down.isDown?this.player.anims.play("front-walk",!0):(this.player.anims.stop(),s.x<0?this.player.setTexture(this.avatarName,"left-walk.000"):s.x>0?this.player.setTexture(this.avatarName,"right-walk.000"):s.y<0?this.player.setTexture(this.avatarName,"back-walk.000"):s.y>0&&this.player.setTexture(this.avatarName,"front-walk.000")),this.moveOtherPlayers(t)}addPlayersToScene(){this.otherSprites=[],Object.keys(this.currentPlayers).forEach(e=>{e!==n.id&&(this.otherSprites[e]=this.addPlayer(this.currentPlayers[e]))})}addPlayer(e){const i=this.physics.add.sprite(e.x,e.y,e.avatar,"left-walk.000");return i.socId=e.socId,h(i.anims,e.avatar),i}getKeyPress(e){if(e.up.isDown)return 1;if(e.right.isDown)return 2;if(e.down.isDown)return 3;if(e.left.isDown)return 4}moveOtherPlayers(e){Object.keys(this.needsToUpdate).forEach(i=>{const t=this.otherSprites[i],s=this.currentPlayers[i].avatar,r=t.body.velocity.clone(),o=this.needsToUpdate[i];t.body.setVelocity(0),o?(o===4?(t.body.setVelocityX(-e),t.anims.play("left-walk",!0)):o===2?(t.body.setVelocityX(e),t.anims.play("right-walk",!0)):o===1?(t.body.setVelocityY(-e),t.anims.play("back-walk",!0)):o===3&&(t.body.setVelocityY(e),t.anims.play("front-walk",!0)),t.body.velocity.normalize().scale(e)):(t.anims.stop(),r.x<0?t.setTexture(s,"left-walk.000"):r.x>0?t.setTexture(s,"right-walk.000"):r.y<0?t.setTexture(s,"back-walk.000"):r.y>0&&t.setTexture(s,"front-walk.000"),delete this.needsToUpdate[i])})}}class b extends p.exports.Scene{constructor(){super({key:"Home1"})}preload(){console.log(y),d({name:"Adithya"}),console.log(y),this.load.image("tiles",`${c}/maps/tilesets/tuxmon-sample-32px-extruded.png`),this.load.tilemapTiledJSON("map",`${c}/maps/json/tuxemon-town.json`),this.load.atlas("self",`${c}/characters/sprites/cap_blue_boy.png`,`${c}/characters/json/spritesheet.json`)}create(){const e=this.make.tilemap({key:"map"}),i=e.addTilesetImage("tuxmon-sample-32px-extruded","tiles");e.createLayer("Below Player",i,0,0);const t=e.createLayer("World",i,0,0),s=e.createLayer("Above Player",i,0,0);t.setCollisionByProperty({collides:!0}),s.setDepth(10);const r=e.findObject("Objects",a=>a.name==="Spawn Point");this.player=this.physics.add.sprite(r.x,r.y,"self","front-walk.000").setBodySize(32,20,!0).setSize(20,30).setOffset(0,0),this.physics.add.collider(this.player,t),h(this.anims);const o=this.cameras.main;o.startFollow(this.player),o.setBounds(0,0,e.widthInPixels,e.heightInPixels),this.cursors=this.input.keyboard.createCursorKeys()}update(e,i){const t=175,s=this.player.body.velocity.clone();this.player.body.setVelocity(0),this.cursors.left.isDown?this.player.body.setVelocityX(-t):this.cursors.right.isDown&&this.player.body.setVelocityX(t),this.cursors.up.isDown?this.player.body.setVelocityY(-t):this.cursors.down.isDown&&this.player.body.setVelocityY(t),this.player.body.velocity.normalize().scale(t),this.cursors.left.isDown?this.player.anims.play("left-walk",!0):this.cursors.right.isDown?this.player.anims.play("right-walk",!0):this.cursors.up.isDown?this.player.anims.play("back-walk",!0):this.cursors.down.isDown?this.player.anims.play("front-walk",!0):(this.player.anims.stop(),s.x<0?this.player.setTexture("self","left-walk.000"):s.x>0?this.player.setTexture("self","right-walk.000"):s.y<0?this.player.setTexture("self","back-walk.000"):s.y>0&&this.player.setTexture("self","front-walk.000"))}}let y={};const d=l=>{y=l},n=f("http://localhost:5000/");n.on("connect",()=>{console.log("Connected to the server...")});const x={type:Phaser.AUTO,width:700,height:700,parent:"canvas",pixelArt:!0,physics:{default:"arcade",arcade:{gravity:{y:0}}},scene:b},u=new Phaser.Game(x);u.scene.add("Init1",k);u.scene.add("Init1",w);
